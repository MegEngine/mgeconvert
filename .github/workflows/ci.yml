# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r ./ci/requires-style.txt
        python3 -m pip install -q megengine==1.0.0 -f https://megengine.org.cn/whl/mge.html
    - name: check format
      run: ./ci/run_format_check.sh
    - name: lint
      run: ./ci/lint.sh

  pytest-transform:
    runs-on: ubuntu-latest
    container:
      image: enginesh233/mgeconvert_ci:v1.0
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: test transform
        run: ./ci/pytest_transform.sh

  pytest-cambricon:
    runs-on: ubuntu-latest
    container:
      image: enginesh233/mgeconvert_ci:v1.0
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: build cambricon
        run: |
          source ./ci/utils.sh
          ./ci/build_cambricon.sh
      - name: test cambricon
        run: |
          source ./ci/utils.sh
          ./ci/pytest_cambricon.sh

  pytest-caffe-and-onnx:
    runs-on: ubuntu-latest
    container:
      image: enginesh233/mgeconvert_ci:v1.0
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: test caffe and onnx
        run: ./ci/pytest_caffe_and_onnx.sh

  pytest-tflite:
    runs-on: ubuntu-latest
    container:
      image: enginesh233/mgeconvert_ci:v1.0
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: test tflite
        run: ./ci/pytest_tflite.sh
